{"version":3,"sources":["components/Profile.js","components/Statistics.js","components/FriendListItem.js","components/FriendList.js","components/TransactionItem.js","components/TransactionHistory.js","App.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","class","src","alt","followers","views","likes","Statistics","title","map","id","label","percentage","FriendListItem","isOnline","width","FriendList","friends","TransactionItem","type","amount","currency","propTypes","items","arrayOf","shape","string","isRequired","TransactionHistory","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77e70a20.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Profile = ({ name, tag, location, avatar, stats }) => {\n  return (\n    <div class=\"profile\">\n      <div class=\"description\">\n        <img src={avatar} alt=\"Аватар пользователя\" class=\"avatar\" />\n        <p class=\"name\">{name}</p>\n        <p class=\"tag\">{tag}</p>\n        <p class=\"location\">{location}</p>\n      </div>\n\n      <ul class=\"stats\">\n        <li>\n          <span class=\"label\">Followers</span>\n          <span class=\"quantity\">{stats.followers}</span>\n        </li>\n        <li>\n          <span class=\"label\">Views</span>\n          <span class=\"quantity\">{stats.views}</span>\n        </li>\n        <li>\n          <span class=\"label\">Likes</span>\n          <span class=\"quantity\">{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.object.isRequired,\n};\n\nexport default Profile;\n","import React from \"react\";\nimport propTypes from \"prop-types\";\n\nconst Statistics = ({ title, stats }) => (\n  <section class=\"statistics\">\n    <h2 class=\"title\">{title}</h2>\n    <ul>\n      {stats.map(({ id, label, percentage }) => (\n        <li key={id} class=\"item\">\n          <span class=\"label\">{label}</span>\n          <span class=\"percentage\">{percentage}</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.propTypes = {\n  title: propTypes.string,\n  stats: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n      label: propTypes.string.isRequired,\n      percentage: propTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport propTypes from \"prop-types\";\n\nconst FriendListItem = ({ avatar, name, isOnline }) => (\n  <div>\n    <span class=\"status\">{isOnline}</span>\n    <img class=\"avatar\" src={avatar} alt={name} width=\"48\" />\n    <p class=\"name\">{name}</p>\n  </div>\n);\n\nFriendListItem.propTypes = {\n  \n  avatar: propTypes.string,\n  name: propTypes.string.isRequired,\n  isOnline: propTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport FriendListItem from \"./FriendListItem\";\n\nconst FriendList = ({ friends }) => (\n  <ul class=\"friend-list\">\n    {friends.map(({ avatar, name, isOnline, id }) => (\n      <li key={id}>\n        <FriendListItem avatar={avatar} name={name} isOnline={isOnline} />\n      </li>\n    ))}\n  </ul>\n);\n\nFriendList.propTypes = {\n  friends: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default FriendList;\n","import React, { Fragment } from \"react\";\nimport propTypes from \"prop-types\";\n\nconst TransactionItem = ({ type, amount, currency }) => (\n  <Fragment>\n    <td>{type}</td>\n    <td>{amount}</td>\n    <td>{currency}</td>\n  </Fragment>\n);\n\nTransactionItem.propTypes = {\n  type: propTypes.string.isRequired,\n  amount: propTypes.string.isRequired,\n  currency: propTypes.string.isRequired,\n};\n\nexport default TransactionItem;\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport TransactionItem from \"./TransactionItem\";\n\nconst TransactionHistory = ({ items }) => (\n  <table class=\"transaction-history\">\n    <thead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {items.map(({ id, type, amount, currency }) => (\n        <tr key={id}>\n          <TransactionItem\n            id={id}\n            type={type}\n            amount={amount}\n            currency={currency}\n          />\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionItem.propTypes = {\n  items: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default TransactionHistory;\n","import React from \"react\";\nimport user from \"./user.json\";\nimport statisticalData from \"./statistical-data.json\";\nimport friends from \"./friends.json\";\nimport transactions from \"./transactions.json\";\nimport Profile from \"./components/Profile\";\nimport Statistics from \"./components/Statistics\";\nimport FriendList from \"./components/FriendList\";\nimport TransactionHistory from \"./components/TransactionHistory\";\n\nconst App = () => {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      {/* <Statistics stats={statisticalData} /> */}\n\n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}